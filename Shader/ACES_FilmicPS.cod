//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler0                          sampler      NA          NA             s0      1 
// texture0                          texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 20 "C:\Users\2230160\Desktop\d3dxgp-conponet\HLSL\ACES_FilmicPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
mov r0.xyz, r0.xyzx  // r0.x <- hdrColor.x; r0.y <- hdrColor.y; r0.z <- hdrColor.z

#line 22
mov r0.w, l(1.000000)  // r0.w <- exposure

#line 23
mul r0.xyz, r0.wwww, r0.xyzx

#line 25
nop 
mov r0.xyz, r0.xyzx

#line 9
mov r0.w, l(2.510000)  // r0.w <- a

#line 10
mov r1.x, l(0.030000)  // r1.x <- b

#line 11
mov r1.y, l(2.430000)  // r1.y <- c

#line 12
mov r1.z, l(0.590000)  // r1.z <- d

#line 13
mov r1.w, l(0.140000)  // r1.w <- e

#line 15
mul r2.xyz, r0.xyzx, r0.wwww
add r2.xyz, r1.xxxx, r2.xyzx
mul r2.xyz, r0.xyzx, r2.xyzx
mul r3.xyz, r0.xyzx, r1.yyyy
add r1.xyz, r1.zzzz, r3.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
add r0.xyz, r1.wwww, r0.xyzx
div r0.xyz, r2.xyzx, r0.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r0.x <- <ToneMapACES return value>.x; r0.y <- <ToneMapACES return value>.y; r0.z <- <ToneMapACES return value>.z

#line 25
mov r0.xyz, r0.xyzx  // r0.x <- ldrColor.x; r0.y <- ldrColor.y; r0.z <- ldrColor.z

#line 27
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 25 instruction slots used
